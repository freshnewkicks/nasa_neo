{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\dev\\\\nasaneoapi\\\\nasa_neo\\\\src\\\\components\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport '../../App.css';\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [neoData, setNeoData] = useState({});\n  const [weeklyArray, setWeeklyArray] = useState([]);\n  let dateResults = []; // recent date (7 day)\n\n  function getLastWeekDates() {\n    for (let i = 0; i < 7; i++) {\n      let date = new Date();\n      date.setDate(date.getDate() - i);\n      let formattedDate = date.toISOString().split('T')[0];\n      dateResults.unshift(formattedDate);\n    }\n  }\n\n  getLastWeekDates();\n  let resData; // Note about fetch options:\n  // no-cors mode won't magically make our CORS request work\n  // One of the side effects of no-cors is that it tells frontend JS code from\n  // seeing contents of the response body and headers under all circumstances\n  // Browsers by default block frontend code from accessing resources cross-origin.\n  // If Access-Control-Allow-Origin is in a response, then browsers relax that blocking allow\n  // code to access the response\n\n  let thisWeek = [];\n\n  function grabData() {\n    fetch(`https://nasa-api-server.herokuapp.com/`).then(async res => {\n      resData = await res.json();\n      setNeoData(resData);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  useEffect(() => {\n    if (loading) {\n      grabData();\n    } else if (!loading) {\n      dateResults.forEach(x => {\n        thisWeek.push(neoData.near_earth_objects[x]);\n      });\n      console.log(thisWeek[0][0]);\n    }\n  }, [loading, weeklyArray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex relative w-1/2 h-full overflow-x-auto shadow-md sm:rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full text-sm text-left text-gray-500 dark:text-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: neo.map((id, key) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: id[0]\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 58\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-white border-b dark:bg-gray-800 dark:border-gray-700\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"RGmZWYbiUDBlNO3qgVTKUCPse/0=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Tyler/dev/nasaneoapi/nasa_neo/src/components/Home/Home.jsx"],"names":["React","useState","useEffect","useRef","Home","loading","setLoading","neoData","setNeoData","weeklyArray","setWeeklyArray","dateResults","getLastWeekDates","i","date","Date","setDate","getDate","formattedDate","toISOString","split","unshift","resData","thisWeek","grabData","fetch","then","res","json","catch","err","console","log","forEach","x","push","near_earth_objects","neo","map","id","key"],"mappings":"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","sourcesContent":["import '../../App.css';\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Home() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [neoData, setNeoData] = useState({});\r\n    const [weeklyArray, setWeeklyArray] = useState([])\r\n\r\n    let dateResults = [];\r\n\r\n    // recent date (7 day)\r\n    function getLastWeekDates() {\r\n        for (let i = 0; i < 7; i++) {\r\n            let date = new Date();\r\n            date.setDate(date.getDate() - i);\r\n            let formattedDate = date.toISOString().split('T')[0];\r\n            dateResults.unshift(formattedDate);\r\n        }\r\n    }\r\n    getLastWeekDates()\r\n\r\n    let resData;\r\n\r\n    // Note about fetch options:\r\n    // no-cors mode won't magically make our CORS request work\r\n    // One of the side effects of no-cors is that it tells frontend JS code from\r\n    // seeing contents of the response body and headers under all circumstances\r\n\r\n    // Browsers by default block frontend code from accessing resources cross-origin.\r\n    // If Access-Control-Allow-Origin is in a response, then browsers relax that blocking allow\r\n    // code to access the response\r\n\r\n\r\n    let thisWeek = []\r\n    function grabData() {\r\n            fetch(`https://nasa-api-server.herokuapp.com/`)\r\n            .then( async(res) => {\r\n                resData =  await res.json();\r\n                setNeoData(resData)\r\n                setLoading(false)\r\n            }).catch( (err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    useEffect(  () => {\r\n        if (loading)\r\n        {\r\n            grabData()\r\n        }\r\n        else if (!loading)\r\n        {\r\n            dateResults.forEach((x) => {\r\n                thisWeek.push(neoData.near_earth_objects[x])\r\n            })\r\n            \r\n            console.log(thisWeek[0][0])\r\n        }\r\n    }, [loading, weeklyArray])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {loading &&\r\n                <div>\r\n                    LOADING\r\n                </div>\r\n            }\r\n            {!loading &&\r\n                <div className=\"flex relative w-1/2 h-full overflow-x-auto shadow-md sm:rounded-lg\">\r\n                    <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                            <tr>\r\n                                {\r\n                                    neo.map((id, key) => <th key={key}>{id[0]}</th>)\r\n                                }\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n\r\n\r\n                                {/*{*/}\r\n                                {/*        neoData.map((item, ind) => (<th key={ind} scope=\"col\" className=\"px-6 py-4\"></th>))*/}\r\n                                {/*    }*/}\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}